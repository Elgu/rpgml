bool      b_1 = true                ; PRINT( getType( true                 ) + "\n" );
bool      b_2 = false               ; PRINT( getType( false                ) + "\n" );
uint8   ui8_1 = 0u                  ; PRINT( getType( 0u                   ) + "\n" );
uint8   ui8_2 = 255u                ; PRINT( getType( 255u                 ) + "\n" );
int8     i8_1 = -128                ; PRINT( getType( -128                 ) + "\n" );
int8     i8_2 = 127                 ; PRINT( getType( 127                  ) + "\n" );
uint16 ui16_1 = 0u                  ; PRINT( getType( 0u                   ) + "\n" );
uint16 ui16_2 = 65535u              ; PRINT( getType( 65535u               ) + "\n" );
int16   i16_1 = -32768              ; PRINT( getType( -32768               ) + "\n" );
int16   i16_2 = 32767               ; PRINT( getType( 32767                ) + "\n" );
uint32 ui32_1 = 0u                  ; PRINT( getType( 0u                   ) + "\n" );
uint32 ui32_2 = 0xFfffFfffu         ; PRINT( getType( 0xFfffFfffu          ) + "\n" );
int32   i32_1 = -0x80000000         ; PRINT( getType( -0x80000000          ) + "\n" );
int32   i32_2 =  0x7fffFfff         ; PRINT( getType(  0x7fffFfff          ) + "\n" );
uint64 ui64_1 = 0ul                 ; PRINT( getType( 0ul                  ) + "\n" );
uint64 ui64_2 = 0xFfffFfffFfffFffful; PRINT( getType( 0xFfffFfffFfffFffful ) + "\n" );
#int64   i64_1 = -0x8000000000000000l; PRINT( getType( -0x8000000000000000l ) + "\n" );
int64   i64_1 = -0x7fffFfffFfffFfffl; PRINT( getType(  -0x7fffFfffFfffFfffl ) + "\n" );
int64   i64_2 =  0x7fffFfffFfffFfffl; PRINT( getType(  0x7fffFfffFfffFfffl ) + "\n" );
float     f_1 = -3.40282e+38f       ; PRINT( getType( -3.40282e+38f        ) + "\n" );
float     f_2 =  3.40282e+38f       ; PRINT( getType(  3.40282e+38f        ) + "\n" );
double    d_1 = -1.79769e+308       ; PRINT( getType( -1.79769e+308        ) + "\n" );
double    d_2 =  1.79769e+308       ; PRINT( getType(  1.79769e+308        ) + "\n" );
string    s_1 = ""                  ; PRINT( getType( ""                   ) + "\n" );
string    s_2 = "foo\nbar"          ; PRINT( getType( "foo\nbar"           ) + "\n" );

PRINT(    b_1 ); PRINT( "\n" );
PRINT(    b_2 ); PRINT( "\n" );
PRINT(  ui8_1 ); PRINT( "\n" );
PRINT(  ui8_2 ); PRINT( "\n" );
PRINT(   i8_1 ); PRINT( "\n" );
PRINT(   i8_2 ); PRINT( "\n" );
PRINT( ui16_1 ); PRINT( "\n" );
PRINT( ui16_2 ); PRINT( "\n" );
PRINT(  i16_1 ); PRINT( "\n" );
PRINT(  i16_2 ); PRINT( "\n" );
PRINT( ui32_1 ); PRINT( "\n" );
PRINT( ui32_2 ); PRINT( "\n" );
PRINT(  i32_1 ); PRINT( "\n" );
PRINT(  i32_2 ); PRINT( "\n" );
PRINT( ui64_1 ); PRINT( "\n" );
PRINT( ui64_2 ); PRINT( "\n" );
PRINT(  i64_1 ); PRINT( "\n" );
PRINT(  i64_2 ); PRINT( "\n" );
PRINT(    f_1 ); PRINT( "\n" );
PRINT(    f_2 ); PRINT( "\n" );
PRINT(    d_1 ); PRINT( "\n" );
PRINT(    d_2 ); PRINT( "\n" );
PRINT(    s_1 ); PRINT( "\n" );
PRINT(    s_2 ); PRINT( "\n" );

Function func() { return "f"; }
BinaryOp node( op="-" );

Function g = func;
Node     n = node;
Output   o = node.out;
Input    i = node.in1;
Param    p = node.op;
Frame    f = Frame{ int i=0; };

Output o2 = nil;
o2 -> node.in1;
nil -> node.in2;

#PRINT( g ); PRINT( "\n" );
#PRINT( n ); PRINT( "\n" );
#PRINT( o ); PRINT( "\n" );
#PRINT( i ); PRINT( "\n" );
#PRINT( p ); PRINT( "\n" );
#PRINT( f ); PRINT( "\n" );

{
  Output[ 3 ] out;
  PRINT( getType( out ) + "\n" );
  PRINT( getType( getSize( out ) ) + "\n" );
}
{
  Output[ 3 ] out = [ counter(), counter(), counter() ];
  PRINT( getType( out ) + "\n" );
  PRINT( getType( getSize( out ) ) + "\n" );
}


